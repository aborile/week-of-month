import { getWeekOfMonth } from ".";

describe("August, 2024", () => {
  test.each([
    ["2024-08-01", 8, 1],
    ["2024-08-02", 8, 1],
    ["2024-08-03", 8, 1],
    ["2024-08-04", 8, 1],
    ["2024-08-05", 8, 2],
    ["2024-08-06", 8, 2],
    ["2024-08-07", 8, 2],
    ["2024-08-08", 8, 2],
    ["2024-08-09", 8, 2],
    ["2024-08-10", 8, 2],
    ["2024-08-11", 8, 2],
    ["2024-08-12", 8, 3],
    ["2024-08-13", 8, 3],
    ["2024-08-14", 8, 3],
    ["2024-08-15", 8, 3],
    ["2024-08-16", 8, 3],
    ["2024-08-17", 8, 3],
    ["2024-08-18", 8, 3],
    ["2024-08-19", 8, 4],
    ["2024-08-20", 8, 4],
    ["2024-08-21", 8, 4],
    ["2024-08-22", 8, 4],
    ["2024-08-23", 8, 4],
    ["2024-08-24", 8, 4],
    ["2024-08-25", 8, 4],
    ["2024-08-26", 8, 5],
    ["2024-08-27", 8, 5],
    ["2024-08-28", 8, 5],
    ["2024-08-29", 8, 5],
    ["2024-08-30", 8, 5],
    ["2024-08-31", 8, 5],
  ])("%s - month: %s, week: %s", (date, month, week) => {
    const result = getWeekOfMonth(date);
    expect(result.month).toBe(month);
    expect(result.week).toBe(week);
  });
});

describe("September, 2024", () => {
  test.each([
    ["2024-09-01", 8, 5],
    ["2024-09-02", 9, 1],
    ["2024-09-03", 9, 1],
    ["2024-09-04", 9, 1],
    ["2024-09-05", 9, 1],
    ["2024-09-06", 9, 1],
    ["2024-09-07", 9, 1],
    ["2024-09-08", 9, 1],
    ["2024-09-09", 9, 2],
    ["2024-09-10", 9, 2],
    ["2024-09-11", 9, 2],
    ["2024-09-12", 9, 2],
    ["2024-09-13", 9, 2],
    ["2024-09-14", 9, 2],
    ["2024-09-15", 9, 2],
    ["2024-09-16", 9, 3],
    ["2024-09-17", 9, 3],
    ["2024-09-18", 9, 3],
    ["2024-09-19", 9, 3],
    ["2024-09-20", 9, 3],
    ["2024-09-21", 9, 3],
    ["2024-09-22", 9, 3],
    ["2024-09-23", 9, 4],
    ["2024-09-24", 9, 4],
    ["2024-09-25", 9, 4],
    ["2024-09-26", 9, 4],
    ["2024-09-27", 9, 4],
    ["2024-09-28", 9, 4],
    ["2024-09-29", 9, 4],
    ["2024-09-30", 10, 1],
  ])("%s - month: %s, week: %s", (date, month, week) => {
    const result = getWeekOfMonth(date);
    expect(result.month).toBe(month);
    expect(result.week).toBe(week);
  });
});

describe("Day 1 is Monday", () => {
  test.each([
    ["2024-01-01", 1, 1],
    ["2024-01-07", 1, 1],
    ["2024-01-08", 1, 2],
    ["2024-01-14", 1, 2],
    ["2024-01-15", 1, 3],
    ["2024-01-21", 1, 3],
    ["2024-01-22", 1, 4],
    ["2024-01-28", 1, 4],
    ["2024-01-29", 2, 1],
    ["2024-01-31", 2, 1],
    ["2024-02-01", 2, 1],
  ])("%s - month: %s, week: %s", (date, month, week) => {
    const result = getWeekOfMonth(date);
    expect(result.month).toBe(month);
    expect(result.week).toBe(week);
  });
});

describe("Day 1 is Tuesday", () => {
  test.each([
    ["2024-10-01", 10, 1],
    ["2024-10-06", 10, 1],
    ["2024-10-07", 10, 2],
    ["2024-10-13", 10, 2],
    ["2024-10-14", 10, 3],
    ["2024-10-20", 10, 3],
    ["2024-10-21", 10, 4],
    ["2024-10-27", 10, 4],
    ["2024-10-28", 10, 5],
    ["2024-10-31", 10, 5],
    ["2024-11-01", 10, 5],
  ])("%s - month: %s, week: %s", (date, month, week) => {
    const result = getWeekOfMonth(date);
    expect(result.month).toBe(month);
    expect(result.week).toBe(week);
  });
});

describe("Day 1 is Wednesday", () => {
  test.each([
    ["2024-05-01", 5, 1],
    ["2024-05-05", 5, 1],
    ["2024-05-06", 5, 2],
    ["2024-05-12", 5, 2],
    ["2024-05-13", 5, 3],
    ["2024-05-19", 5, 3],
    ["2024-05-20", 5, 4],
    ["2024-05-26", 5, 4],
    ["2024-05-27", 5, 5],
    ["2024-05-31", 5, 5],
    ["2024-06-01", 5, 5],
  ])("%s - month: %s, week: %s", (date, month, week) => {
    const result = getWeekOfMonth(date);
    expect(result.month).toBe(month);
    expect(result.week).toBe(week);
  });
});

describe("Day 1 is Thursday", () => {
  test.each([
    ["2024-02-01", 2, 1],
    ["2024-02-04", 2, 1],
    ["2024-02-05", 2, 2],
    ["2024-02-11", 2, 2],
    ["2024-02-12", 2, 3],
    ["2024-02-18", 2, 3],
    ["2024-02-19", 2, 4],
    ["2024-02-25", 2, 4],
    ["2024-02-26", 2, 5],
    ["2024-02-29", 2, 5],
    ["2024-03-01", 2, 5],
  ])("%s - month: %s, week: %s", (date, month, week) => {
    const result = getWeekOfMonth(date);
    expect(result.month).toBe(month);
    expect(result.week).toBe(week);
  });
});

describe("Day 1 is Friday", () => {
  test.each([
    ["2024-03-01", 2, 5],
    ["2024-03-03", 2, 5],
    ["2024-03-04", 3, 1],
    ["2024-03-10", 3, 1],
    ["2024-03-11", 3, 2],
    ["2024-03-17", 3, 2],
    ["2024-03-18", 3, 3],
    ["2024-03-24", 3, 3],
    ["2024-03-25", 3, 4],
    ["2024-03-31", 3, 4],
    ["2024-04-01", 4, 1],
  ])("%s - month: %s, week: %s", (date, month, week) => {
    const result = getWeekOfMonth(date);
    expect(result.month).toBe(month);
    expect(result.week).toBe(week);
  });
});

describe("Day 1 is Saturday", () => {
  test.each([
    ["2024-06-01", 5, 5],
    ["2024-06-02", 5, 5],
    ["2024-06-03", 6, 1],
    ["2024-06-09", 6, 1],
    ["2024-06-10", 6, 2],
    ["2024-06-16", 6, 2],
    ["2024-06-17", 6, 3],
    ["2024-06-23", 6, 3],
    ["2024-06-24", 6, 4],
    ["2024-06-30", 6, 4],
    ["2024-07-01", 7, 1],
  ])("%s - month: %s, week: %s", (date, month, week) => {
    const result = getWeekOfMonth(date);
    expect(result.month).toBe(month);
    expect(result.week).toBe(week);
  });
});

describe("Day 1 is Sunday", () => {
  test.each([
    ["2024-12-01", 11, 4],
    ["2024-12-02", 12, 1],
    ["2024-12-08", 12, 1],
    ["2024-12-09", 12, 2],
    ["2024-12-15", 12, 2],
    ["2024-12-16", 12, 3],
    ["2024-12-22", 12, 3],
    ["2024-12-23", 12, 4],
    ["2024-12-29", 12, 4],
    ["2024-12-30", 1, 1],
    ["2024-12-31", 1, 1],
    ["2025-01-01", 1, 1],
  ])("%s - month: %s, week: %s", (date, month, week) => {
    const result = getWeekOfMonth(date);
    expect(result.month).toBe(month);
    expect(result.week).toBe(week);
  });
});
